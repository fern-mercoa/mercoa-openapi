openapi: 3.0.1
info:
  title: api
  version: ''
paths:
  /entity/{entityId}/counterparties:
    get:
      description: Find counterparties
      operationId: CounterpartyService.find
      tags:
        - Counterparty
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: query
          in: query
          description: Search term
          required: true
          schema:
            type: string
        - name: paymentMethods
          in: query
          description: include payment method information in response
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
      security: &ref_0
        - BearerAuth: []
  /entities:
    get:
      description: Get all entities
      operationId: EntityService.getAll
      tags:
        - Entity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
      security: *ref_0
  /entity:
    post:
      operationId: EntityService.create
      tags:
        - Entity
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
  /entity/{entityId}:
    get:
      description: Get entity
      operationId: EntityService.get
      tags:
        - Entity
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security: *ref_0
    post:
      description: Update entity
      operationId: EntityService.update
      tags:
        - Entity
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entity'
    delete:
      description: Delete entity
      operationId: EntityService.delete
      tags:
        - Entity
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /entity/{entityId}/accept-tos:
    post:
      description: End user accepts Terms of Service
      operationId: EntityService.acceptTermsOfService
      tags:
        - Entity
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /entity/{entityId}/invoices:
    get:
      description: Get invoices for an entity
      operationId: InvoiceService.getInvoices
      tags:
        - Invoice
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice'
      security: *ref_0
  /entity/{entityId}/token:
    get:
      description: Get JWT token for entity
      operationId: InvoiceService.getToken
      tags:
        - Invoice
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /invoice:
    post:
      description: Create invoice
      operationId: InvoiceService.create
      tags:
        - Invoice
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
  /invoice/{invoiceId}:
    get:
      description: Get invoice
      operationId: InvoiceService.get
      tags:
        - Invoice
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InvoiceId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security: *ref_0
    post:
      description: Update invoice
      operationId: InvoiceService.update
      tags:
        - Invoice
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InvoiceId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice'
    delete:
      description: Delete invoice
      operationId: InvoiceService.delete
      tags:
        - Invoice
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InvoiceId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /invoice/{invoiceId}/vendorlink:
    get:
      description: Get temporary link for vendor to accept payment
      operationId: InvoiceService.getVendorLink
      tags:
        - Invoice
      parameters:
        - name: invoiceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InvoiceId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /entity/{entityId}/paymentMethods:
    get:
      operationId: PaymentMethodService.getAll
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: type
          in: query
          description: Type of payment method to filter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
      security: *ref_0
  /entity/{entityId}/paymentMethod:
    post:
      description: Create payment method
      operationId: PaymentMethodService.create
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethod'
  /entity/{entityId}/paymentMethod/{paymentMethodId}:
    get:
      description: Get payment method
      operationId: PaymentMethodService.get
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: paymentMethodId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PaymentMethodId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
      security: *ref_0
    delete:
      description: Delete payment method
      operationId: PaymentMethodService.delete
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: paymentMethodId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PaymentMethodId'
      responses:
        '204':
          description: ''
      security: *ref_0
  /entity/{entityId}/paymentMethod/{paymentMethodId}/micro-deposits:
    post:
      description: Initiate micro deposits for a bank account
      operationId: PaymentMethodService.initiateMicroDeposits
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: paymentMethodId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PaymentMethodId'
      responses:
        '204':
          description: ''
      security: *ref_0
    put:
      description: Complete micro deposit verification
      operationId: PaymentMethodService.completeMicroDeposits
      tags:
        - PaymentMethod
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: paymentMethodId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/PaymentMethodId'
      responses:
        '204':
          description: ''
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amounts:
                  type: array
                  items:
                    type: integer
  /api/entity/{entityId}/representatives:
    get:
      description: Get representatives for an entity
      operationId: RepresentativeService.getAll
      tags:
        - Representative
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Representative'
      security: *ref_0
  /api/entity/{entityId}/representative:
    post:
      description: Create representative
      operationId: RepresentativeService.create
      tags:
        - Representative
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
      security: *ref_0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Representative'
  /api/entity/{entityId}/representative/{representativeId}:
    get:
      description: Get representative
      operationId: RepresentativeService.get
      tags:
        - Representative
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: representativeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RepresentativeId'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Representative'
      security: *ref_0
    delete:
      description: Delete representative
      operationId: RepresentativeService.delete
      tags:
        - Representative
      parameters:
        - name: entityId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/EntityId'
        - name: representativeId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RepresentativeId'
      responses:
        '204':
          description: ''
      security: *ref_0
components:
  schemas:
    FullName:
      type: object
      properties:
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        suffix:
          type: string
      required:
        - firstName
        - lastName
    BirthDate:
      type: object
      properties:
        day:
          type: integer
        month:
          type: integer
        year:
          type: integer
    Address:
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        country:
          type: string
      required:
        - addressLine1
        - city
        - stateOrProvince
        - postalCode
    PhoneNumber:
      type: object
      properties:
        countryCode:
          type: string
        number:
          type: string
      required:
        - countryCode
        - number
    Entity:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/EntityId'
        accountType:
          type: string
        name:
          type: string
        email:
          type: string
        profile:
          $ref: '#/components/schemas/Profile'
        moovStatus:
          type: string
        ownersProvided:
          type: boolean
        accpetedMoovTos:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - accountType
        - profile
    EntityId:
      type: string
    Profile:
      type: object
      properties:
        business:
          $ref: '#/components/schemas/BusinessProfile'
        individual:
          $ref: '#/components/schemas/IndividualProfile'
    BusinessProfile:
      type: object
      properties:
        email:
          type: string
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        businessType:
          type: string
        legalBusinessName:
          type: string
        doingBusinessAs:
          type: string
        website:
          type: string
        ownersProvided:
          type: boolean
        taxId:
          $ref: '#/components/schemas/TaxID'
        address:
          $ref: '#/components/schemas/Address'
      required:
        - email
        - phone
        - businessType
        - legalBusinessName
        - doingBusinessAs
        - website
        - ownersProvided
        - taxId
        - address
    IndividualProfile:
      type: object
      properties:
        email:
          type: string
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        name:
          $ref: '#/components/schemas/FullName'
        birthdate:
          $ref: '#/components/schemas/BirthDate'
        address:
          $ref: '#/components/schemas/Address'
      required:
        - email
        - phone
        - name
        - birthdate
        - address
    TaxID:
      type: object
      properties:
        ein:
          type: string
      required:
        - ein
    Invoice:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/InvoiceId'
        status:
          type: string
        amount:
          type: number
          format: double
        currency:
          type: string
        dueDate:
          type: string
        invoiceNumber:
          type: string
        noteToSelf:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        vendorId:
          type: string
        vendor:
          $ref: '#/components/schemas/Entity'
        payerId:
          type: string
        payer:
          $ref: '#/components/schemas/Entity'
        paymentSource:
          $ref: '#/components/schemas/PaymentMethod'
        paymentSourceId:
          type: string
        paymentDestination:
          $ref: '#/components/schemas/PaymentMethod'
        paymentDestinationId:
          type: string
    InvoiceId:
      type: string
    PaymentMethod:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/PaymentMethodId'
        type:
          type: string
        bankAccount:
          $ref: '#/components/schemas/BankAccount'
        check:
          $ref: '#/components/schemas/Check'
    PaymentMethodId:
      type: string
    BankAccount:
      type: object
      properties:
        id:
          type: string
        bankName:
          type: string
        accountName:
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        moovStatus:
          type: string
      required:
        - bankName
        - routingNumber
        - accountNumber
        - accountType
        - moovStatus
    Check:
      type: object
      properties:
        id:
          type: string
        payToTheOrderOf:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateOrProvince:
          type: string
        postalCode:
          type: string
        country:
          type: string
      required:
        - payToTheOrderOf
        - addressLine1
        - city
        - stateOrProvince
        - postalCode
        - country
    Representative:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/RepresentativeId'
        name:
          $ref: '#/components/schemas/FullName'
        phone:
          $ref: '#/components/schemas/PhoneNumber'
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        birthDateProvided:
          type: boolean
        governmentIDProvided:
          type: boolean
        birthDate:
          $ref: '#/components/schemas/BirthDate'
        governmentID:
          $ref: '#/components/schemas/IndividualGovernmentId'
        responsibilities:
          $ref: '#/components/schemas/Responsibilities'
        createdOn:
          type: string
        updatedOn:
          type: string
        disabledOn:
          type: string
      required:
        - name
        - phone
        - email
        - address
    RepresentativeId:
      type: string
    Responsibilities:
      type: object
      properties:
        jobTitle:
          type: string
        isController:
          type: boolean
        isOwner:
          type: boolean
        ownershipPercentage:
          type: number
          format: double
    IndividualGovernmentId:
      type: object
      properties:
        ssn:
          $ref: '#/components/schemas/SocialSecurityNumber'
        itin:
          $ref: '#/components/schemas/ITIN'
      required:
        - ssn
        - itin
    SocialSecurityNumber:
      type: object
      properties:
        full:
          type: string
        lastFour:
          type: string
      required:
        - full
        - lastFour
    ITIN:
      type: object
      properties:
        full:
          type: string
        lastFour:
          type: string
      required:
        - full
        - lastFour
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
servers:
  - url: https://www.mercoa.com/api
    description: Production
